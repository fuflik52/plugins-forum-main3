#!/usr/bin/env node

/**
 * üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Supabase –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–ª–∞–≥–∏–Ω–æ–≤
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É Supabase...');
console.log('=' .repeat(60));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, cwd = process.cwd()) {
    try {
        console.log(`üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º: ${command}`);
        const result = execSync(command, { 
            cwd, 
            stdio: 'inherit',
            encoding: 'utf8'
        });
        console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n');
        return true;
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: ${command}`);
        console.error(error.message);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function fileExists(filePath) {
    return fs.existsSync(path.resolve(filePath));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
function createEnvFromExample(examplePath, envPath) {
    if (!fileExists(envPath) && fileExists(examplePath)) {
        try {
            fs.copyFileSync(examplePath, envPath);
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª ${envPath} –∏–∑ –ø—Ä–∏–º–µ—Ä–∞`);
            return true;
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ${envPath}:`, error.message);
            return false;
        }
    }
    return false;
}

async function main() {
    console.log('üìã –®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('-' .repeat(40));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    const requiredDirs = ['frontend', 'database', 'backend'];
    for (const dir of requiredDirs) {
        if (fileExists(dir)) {
            console.log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${dir} –Ω–∞–π–¥–µ–Ω–∞`);
        } else {
            console.log(`‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
    }
    
    console.log('\nüì¶ –®–ê–ì 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
    console.log('-' .repeat(40));
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è database
    if (fileExists('database/package.json')) {
        console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è database...');
        if (!runCommand('npm install', 'database')) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è database');
        }
    }
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è frontend
    if (fileExists('frontend/package.json')) {
        console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è frontend...');
        if (!runCommand('npm install', 'frontend')) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è frontend');
        }
    }
    
    console.log('\nüîß –®–ê–ì 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('-' .repeat(40));
    
    // –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤
    createEnvFromExample('database/.env.example', 'database/.env');
    createEnvFromExample('frontend/.env.example', 'frontend/.env');
    
    console.log('\nüìÑ –®–ê–ì 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Supabase');
    console.log('-' .repeat(40));
    
    console.log('üîó –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('');
    console.log('1Ô∏è‚É£  –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Supabase:');
    console.log('   https://app.supabase.com/');
    console.log('');
    console.log('2Ô∏è‚É£  –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏ API –∫–ª—é—á–∏ –∏–∑ Settings > API');
    console.log('');
    console.log('3Ô∏è‚É£  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∞–π–ª—ã .env:');
    console.log('   - database/.env (–¥–ª—è Node.js —Å–∫—Ä–∏–ø—Ç–æ–≤)');
    console.log('   - frontend/.env (–¥–ª—è React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)');
    console.log('');
    console.log('4Ô∏è‚É£  –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –≤ Supabase SQL Editor:');
    console.log('   - –û—Ç–∫—Ä–æ–π—Ç–µ: https://app.supabase.com/project/YOUR_PROJECT_ID/sql');
    console.log('   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞: database/setup.sql');
    console.log('   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç');
    console.log('');
    console.log('5Ô∏è‚É£  –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:');
    console.log('   cd database && npm run populate');
    console.log('');
    console.log('6Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥:');
    console.log('   cd frontend && npm run dev');
    console.log('');
    
    console.log('\nüìö –®–ê–ì 5: –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã');
    console.log('-' .repeat(40));
    console.log('Database –∫–æ–º–∞–Ω–¥—ã:');
    console.log('  cd database && npm run help     - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã');
    console.log('  cd database && npm run check-env - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env');
    console.log('  cd database && npm run populate  - –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ë–î');
    console.log('');
    console.log('Frontend –∫–æ–º–∞–Ω–¥—ã:');
    console.log('  cd frontend && npm run dev       - –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('  cd frontend && npm run build     - –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('');
    
    console.log('\nüéØ –®–ê–ì 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏');
    console.log('-' .repeat(40));
    
    const checks = [
        { name: 'SQL —Å–∫—Ä–∏–ø—Ç', path: 'database/setup.sql', status: fileExists('database/setup.sql') },
        { name: 'Node.js —Å–∫—Ä–∏–ø—Ç', path: 'database/populate.js', status: fileExists('database/populate.js') },
        { name: 'TypeScript —Å–µ—Ä–≤–∏—Å', path: 'frontend/src/services/supabaseService.ts', status: fileExists('frontend/src/services/supabaseService.ts') },
        { name: 'Database package.json', path: 'database/package.json', status: fileExists('database/package.json') },
        { name: 'Frontend .env example', path: 'frontend/.env.example', status: fileExists('frontend/.env.example') },
        { name: 'Database .env example', path: 'database/.env.example', status: fileExists('database/.env.example') }
    ];
    
    let allReady = true;
    for (const check of checks) {
        const icon = check.status ? '‚úÖ' : '‚ùå';
        console.log(`${icon} ${check.name}: ${check.path}`);
        if (!check.status) allReady = false;
    }
    
    console.log('\n' + '=' .repeat(60));
    if (allReady) {
        console.log('üéâ –í–°–ï –ì–û–¢–û–í–û! Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.');
        console.log('üìã –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
    } else {
        console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É.');
    }
    console.log('=' .repeat(60));
    
    console.log('\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Supabase: https://supabase.com/docs');
    console.log('üîß TypeScript –∫–ª–∏–µ–Ω—Ç: https://supabase.com/docs/reference/javascript');
    console.log('üóÑÔ∏è  SQL —Ñ—É–Ω–∫—Ü–∏–∏: https://supabase.com/docs/guides/database/functions');
    console.log('');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (error) => {
    console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});

process.on('uncaughtException', (error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
});

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
    main().catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
        process.exit(1);
    });
}

module.exports = { main };